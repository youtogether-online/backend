// Code generated by ent, DO NOT EDIT.

package room

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the room type in the database.
	Label = "room"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPrivacy holds the string denoting the privacy field in the database.
	FieldPrivacy = "privacy"
	// FieldPasswordHash holds the string denoting the password_hash field in the database.
	FieldPasswordHash = "password_hash"
	// FieldHasChat holds the string denoting the has_chat field in the database.
	FieldHasChat = "has_chat"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldAvatar holds the string denoting the avatar field in the database.
	FieldAvatar = "avatar"
	// Table holds the table name of the room in the database.
	Table = "rooms"
)

// Columns holds all SQL columns for room fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldName,
	FieldPrivacy,
	FieldPasswordHash,
	FieldHasChat,
	FieldDescription,
	FieldAvatar,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultHasChat holds the default value on creation for the "has_chat" field.
	DefaultHasChat bool
	// DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	DescriptionValidator func(string) error
)

// Privacy defines the type for the "privacy" enum field.
type Privacy string

// PrivacyPUBLIC is the default value of the Privacy enum.
const DefaultPrivacy = PrivacyPUBLIC

// Privacy values.
const (
	PrivacyPRIVATE Privacy = "PRIVATE"
	PrivacyFRIENDS Privacy = "FRIENDS"
	PrivacyPUBLIC  Privacy = "PUBLIC"
)

func (pr Privacy) String() string {
	return string(pr)
}

// PrivacyValidator is a validator for the "privacy" field enum values. It is called by the builders before save.
func PrivacyValidator(pr Privacy) error {
	switch pr {
	case PrivacyPRIVATE, PrivacyFRIENDS, PrivacyPUBLIC:
		return nil
	default:
		return fmt.Errorf("room: invalid enum value for privacy field: %q", pr)
	}
}
